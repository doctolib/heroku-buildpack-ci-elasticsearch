#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

# fail fast
set -e

BPLOG_PREFIX="buildpack.java"

BP_DIR=$(cd $(dirname $0)/..; pwd) # absolute path
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

source $BP_DIR/lib/common.sh
source <(curl -s --retry 3 -L $BUILDPACK_STDLIB_URL)

export_env $ENV_DIR "." "JAVA_OPTS|JAVA_TOOL_OPTIONS"

install_jdk "${BUILD_DIR}" "${CACHE_DIR}"

indent() {
  sed -u 's/^/       /'
}

VERSION="${BUILDPACK_ELASTICSEARCH_VERSION:-6.4.3}"
MAJOR_VERSION=$(echo "$VERSION" | cut -d. -f1)
INSTALL_DIR="$BUILD_DIR/.heroku/vendor/elasticsearch"
PROFILE_PATH="$BUILD_DIR/.profile.d/elasticsearch.sh"

mkdir -p $INSTALL_DIR
mkdir -p $(dirname $PROFILE_PATH)
mkdir -p $CACHE_DIR

echo "Search in cache directory $CACHE_DIR/elasticsearch-$VERSION" | indent

if [ ! -d $CACHE_DIR/elasticsearch-$VERSION ]; then
	echo "Fetching and installing elasticsearch-$VERSION" | indent
	cd $CACHE_DIR

    if [ $MAJOR_VERSION -ge 7 ];then
        curl -sL -o "elasticsearch-$VERSION.tar.gz" "https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-$VERSION-linux-x86_64.tar.gz"
    else
        curl -sOL "https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-$VERSION.tar.gz"
    fi

	tar zxf "elasticsearch-$VERSION.tar.gz"
	cd "elasticsearch-$VERSION"
	cp -r $CACHE_DIR/elasticsearch-$VERSION/* $INSTALL_DIR/
else
	echo "Installing elasticsearch from cache" | indent
	cp -r $CACHE_DIR/elasticsearch-$VERSION/*  $INSTALL_DIR/
fi

cat <<EOF >> $PROFILE_PATH
export PATH=/app/.heroku/vendor/elasticsearch/bin:\$PATH
export ELASTICSEARCH_URL=http://127.0.0.1:9200

source $BUILD_DIR/.profile.d/jvmcommon.sh

if [ ! -f /tmp/es.pid ]; then
  echo "Starting Elasticsearch..."
  elasticsearch -d -p /tmp/es.pid

  while true; do  # infinite loop
    curl -o /dev/null -s http://localhost:9200 # silent curl request to ES
    if [ $? -eq 0 ]; then
      # curl returned 0 - success
      echo "Elasticsearch is ready..."
      break # terminate loop
    fi
    echo "Waiting for Elasticsearch..."
    sleep 1 # short pause between requests
  done
fi
EOF

echo "Done" | indent
